//
// AUTO-GENERATED FILE, DO NOT MODIFY!
//
// @dart=2.9

// ignore_for_file: unused_element, unused_import
// ignore_for_file: always_put_required_named_parameters_first
// ignore_for_file: constant_identifier_names
// ignore_for_file: lines_longer_than_80_chars

import 'package:openapi/api.dart';
import 'package:test/test.dart';


/// tests for QuestionApi
void main() {
  final instance = QuestionApi();

  group('tests for QuestionApi', () {
    // 回答投稿
    //
    // 質問に対する回答を投稿する 認証必須 
    //
    //Future<BasicResponse> answerQuestion(int id, String contents, MultipartFile file) async
    test('test answerQuestion', () async {
      // TODO
    });

    // ベストアンサー決定
    //
    // ベストアンサーを決定する 認証必須 
    //
    //Future<BasicResponse> decideBestAnswer(DecideBestAnswerParam decideBestAnswerParam) async
    test('test decideBestAnswer', () async {
      // TODO
    });

    // 回答一覧取得
    //
    // 質問の回答一覧を取得する 認証不要 
    //
    //Future<AnswersResponse> getAnswers(int id) async
    test('test getAnswers', () async {
      // TODO
    });

    // ベストアンサー取得
    //
    // ベストアンサーが存在するか、しないか 存在する場合は回答IDを取得する 認証不要 
    //
    //Future<BestAnswerResponse> getBestAnswer(int id) async
    test('test getBestAnswer', () async {
      // TODO
    });

    // 質問内容取得
    //
    // 質問の内容と回答の一覧を取得する 投稿日順に取得する 認証不要 
    //
    //Future<QuestionDataResponse> getQuestion(int id) async
    test('test getQuestion', () async {
      // TODO
    });

    // 質問カテゴリ取得
    //
    // 質問のカテゴリ一覧を取得する 認証不要 
    //
    //Future<QuestionCategoriesResponse> getQuestionCategories() async
    test('test getQuestionCategories', () async {
      // TODO
    });

    // 質問投稿
    //
    // 質問を投稿する 認証必須 
    //
    //Future<BasicResponse> postQuestion(String contents, MultipartFile file) async
    test('test postQuestion', () async {
      // TODO
    });

    // 質問検索
    //
    // 質問情報を検索 タグを指定した場合、そのタグのみ表示する タグを指定しない場合、新着、未解決、解決済みの全てを取得する 認証不要 
    //
    //Future<QuestionsResponse> searchQuestions(int pageNewArrival, int pageUnsolved, int pageSolved, { List<int> tags, String keyword }) async
    test('test searchQuestions', () async {
      // TODO
    });

  });
}
